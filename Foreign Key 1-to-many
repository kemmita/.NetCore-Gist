1. We want to create a car table and establish a connection with users table
2.first go to models and add a model to create a car mode

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore.Metadata.Internal;

namespace CarsByRuss.Models
{
    public class Car
    {
        public int Id { get; set; }
        public string VIN { get; set; }
        public string Make { get; set; }
        public string Model { get; set; }
        public string Style { get; set; }
        public int Year { get; set; }
        public double Miles { get; set; }
        public string Color { get; set; }

        
        //below code will show you how to establish the foreig key connection
        public string UserId { get; set; }

        [ForeignKey("UserId")]
        public virtual ApplicationUser ApplicationUser { get; set; }
    }
}

3. now we need to go to our applicationdbcontext and add a dbset
 public DbSet<Car> Cars { get; set; }
 
 4. run add-migration then run update-database
 
 
 5.We will be creating a view model so we can import bothe models to display data on the view
 using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using CarsByRuss.Models;

namespace CarsByRuss.ViewModels
{
    public class CarAndCustomerViewModel
    {
    //below is where the one to many is established
        public ApplicationUser UserObj { get; set; }
        public IEnumerable<Car> Cars { get; set; }
    }
}

