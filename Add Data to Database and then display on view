1. the journey will begin in our index file where we will use a link with a action helper to that will direct us to our controller
//and to the Create Action
<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">Add</a>
</p>

 public IActionResult Create()
        {
            return View();
        }

2.now we will be at the view where we can add a new book title
@model BookList.Models.Book
@{
    ViewData["Title"] = "Create";
}
<br />
<h2>Add New Book</h2>
<hr />
//notice at the form we have an asp action that will be directed to Create action and the Model Book has been declared above, so it knows where to go
<form asp-action="Create">
    <div class="row form-border">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <div class="row">
                <div class="col-sm-1">
                //this is just a fancy way to print Name on the screen
                    <label asp-for="Name"></label>
                </div>
                <div class="col-sm-4">
                    <input asp-for="Name" class="form-control"/>
                </div>
            </div>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <br/>
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-sm btn-primary" />
            <input type="submit" asp-action="Index" class="btn btn-sm btn-success" value="Back To List" />
        </div>
    </div>
</form>

//Now back in the controller We know we will be directed to an action named Create from line 21 but there are two Create methods
//since this is a Post .NET know which action should be used in the controller
public IActionResult Create()
        {
            return View();
        }
//two tags above the action below should always be used with Posts, notice in the param area we are using the Book Model/Table
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Create(Book book)
        {
            if (ModelState.IsValid)
            {
              //if all data is entered correctly, it will be saved to the Book table and then we will be redirected to the Index page of this controller
                _db.Add(book);
                await _db.SaveChangesAsync();
                return RedirectToAction("Index");
            }

            return View(book);
        }
        

