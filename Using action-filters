our goal is to send the time last logged in when ever a user clicks on data that references a user
1. in your helpers fodler create anew c# file called LogUserActivity
using System;
using System.Security.Claims;
using System.Threading.Tasks;
using DatingApp.API.data;
using Microsoft.AspNetCore.Mvc.Filters;
using Microsoft.Extensions.DependencyInjection;

namespace DatingApp.API.Helpers
{
  public class LogUserActivity : IAsyncActionFilter
  {
    public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)
    {
      //we use await next so that the fucntion does not run until the action filter has been triggered
      var resultContext = await next();
      //we then use int.parse to obtain the users id
      var userId = int.Parse(resultContext.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier).Value);
      //we then need access to a method that will fetch the userid being brought in from above, we do this by requesting a service,
      //IDatingRepository, this will give us access to all the methods we created in that repository
      var repo = resultContext.HttpContext.RequestServices.GetService<IDatingRepository>();
      //we then call the GetUser method from the repo and pass in the userId
      var user = await repo.GetUser(userId);
      user.LastActive = DateTime.Now;
      await repo.SaveAll();
    }
  }
}

2. Now in your startup file in your ConfigureServices method, add a new service
 services.AddScoped<LogUserActivity>();
 

3. now in your UserController add a service filter to the top of your file
[ServiceFilter(typeof(LogUserActivity))]
