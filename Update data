1.Again the journey begins in a view that has the model and data already displayed
@model BookList.Models.Book

<h2><strong>Book Title:</strong> @Model.Name</h2>
//using the id of the model id and the action Edit, so we will now be routed to the Edit action in our controller
<a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-primary">Edit</a>

2. Controller
   public async Task<IActionResult> Edit(int? id)
        {
            if (id == null)
            {
                return NotFound();
            }

            var book = await _db.Books.SingleOrDefaultAsync(b => b.Id == id);
            if (book == null)
            {
                return NotFound();
            }

            return View(book);
        }
 
 
 3. Edit view
 @model BookList.Models.Book
@{
    ViewData["Title"] = "Edit";
}

<h2><strong>Book Title:</strong>@Model.Name</h2>
<form asp-action="Edit">
<div class="row form-border">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <div class="row">
            <div class="col-sm-1">
                <label asp-for="Name"></label>
            </div>
            <div class="col-sm-4">
                <input asp-for="Name" class="form-control"/>
            </div>
        </div>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <br/>
    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-sm btn-primary" />
        <input type="submit" asp-action="Index" class="btn btn-sm btn-success" value="Back To List" />
    </div>
</div>
</form>

4. Back to the controller
 [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Edit(int id, Book book)
        {
            if (id != book.Id)
            {
                return NotFound();
            }

            if (ModelState.IsValid)
            {
                _db.Update(book);
                await _db.SaveChangesAsync();
                return RedirectToAction("Index");
            }

            return View(book);
        }
